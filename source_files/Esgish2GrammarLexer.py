# Generated from Esgish2Grammar.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,38,509,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,4,3,110,8,3,11,3,12,3,111,1,3,1,3,1,4,1,4,4,4,118,8,4,11,4,12,
        4,119,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,4,5,131,8,5,11,5,12,5,
        132,1,5,3,5,136,8,5,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,3,7,153,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
        3,8,164,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,176,8,9,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,
        190,8,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
        1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,3,13,212,8,13,1,14,
        1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
        1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,
        1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,
        1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
        1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,
        1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,33,
        1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
        1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,4,35,431,8,35,11,35,12,35,
        432,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,5,36,444,8,36,10,
        36,12,36,447,9,36,1,36,1,36,1,37,4,37,452,8,37,11,37,12,37,453,1,
        37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,
        45,1,45,0,0,46,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
        22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
        33,67,34,69,35,71,36,73,37,75,38,77,0,79,0,81,0,83,0,85,0,87,0,89,
        0,91,0,1,0,7,5,0,35,35,38,38,48,57,65,90,97,122,1,0,48,57,2,0,60,
        60,62,62,10,0,36,38,40,41,44,44,47,47,58,58,60,60,62,62,91,91,93,
        93,124,124,3,0,9,10,13,13,32,32,2,0,65,90,97,122,3,0,48,57,65,70,
        97,102,529,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
        0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,1,93,1,0,0,0,3,95,1,
        0,0,0,5,97,1,0,0,0,7,99,1,0,0,0,9,115,1,0,0,0,11,123,1,0,0,0,13,
        140,1,0,0,0,15,152,1,0,0,0,17,163,1,0,0,0,19,175,1,0,0,0,21,189,
        1,0,0,0,23,191,1,0,0,0,25,199,1,0,0,0,27,211,1,0,0,0,29,213,1,0,
        0,0,31,224,1,0,0,0,33,227,1,0,0,0,35,240,1,0,0,0,37,268,1,0,0,0,
        39,284,1,0,0,0,41,293,1,0,0,0,43,314,1,0,0,0,45,329,1,0,0,0,47,345,
        1,0,0,0,49,349,1,0,0,0,51,360,1,0,0,0,53,369,1,0,0,0,55,375,1,0,
        0,0,57,387,1,0,0,0,59,395,1,0,0,0,61,399,1,0,0,0,63,402,1,0,0,0,
        65,406,1,0,0,0,67,408,1,0,0,0,69,410,1,0,0,0,71,430,1,0,0,0,73,434,
        1,0,0,0,75,451,1,0,0,0,77,457,1,0,0,0,79,459,1,0,0,0,81,461,1,0,
        0,0,83,463,1,0,0,0,85,500,1,0,0,0,87,502,1,0,0,0,89,504,1,0,0,0,
        91,506,1,0,0,0,93,94,5,40,0,0,94,2,1,0,0,0,95,96,5,41,0,0,96,4,1,
        0,0,0,97,98,5,44,0,0,98,6,1,0,0,0,99,100,3,65,32,0,100,101,5,115,
        0,0,101,102,5,99,0,0,102,103,5,114,0,0,103,104,5,101,0,0,104,105,
        5,101,0,0,105,106,5,110,0,0,106,107,5,35,0,0,107,109,1,0,0,0,108,
        110,2,48,57,0,109,108,1,0,0,0,110,111,1,0,0,0,111,109,1,0,0,0,111,
        112,1,0,0,0,112,113,1,0,0,0,113,114,3,67,33,0,114,8,1,0,0,0,115,
        117,3,65,32,0,116,118,7,0,0,0,117,116,1,0,0,0,118,119,1,0,0,0,119,
        117,1,0,0,0,119,120,1,0,0,0,120,121,1,0,0,0,121,122,3,67,33,0,122,
        10,1,0,0,0,123,135,3,65,32,0,124,125,5,114,0,0,125,126,5,101,0,0,
        126,127,5,108,0,0,127,128,5,126,0,0,128,130,1,0,0,0,129,131,7,1,
        0,0,130,129,1,0,0,0,131,132,1,0,0,0,132,130,1,0,0,0,132,133,1,0,
        0,0,133,134,1,0,0,0,134,136,5,126,0,0,135,124,1,0,0,0,135,136,1,
        0,0,0,136,137,1,0,0,0,137,138,3,83,41,0,138,139,3,67,33,0,139,12,
        1,0,0,0,140,141,5,73,0,0,141,142,5,83,0,0,142,14,1,0,0,0,143,144,
        5,84,0,0,144,145,5,114,0,0,145,146,5,117,0,0,146,153,5,101,0,0,147,
        148,5,70,0,0,148,149,5,97,0,0,149,150,5,108,0,0,150,151,5,115,0,
        0,151,153,5,101,0,0,152,143,1,0,0,0,152,147,1,0,0,0,153,16,1,0,0,
        0,154,155,5,61,0,0,155,164,5,61,0,0,156,157,5,60,0,0,157,164,5,61,
        0,0,158,159,5,62,0,0,159,164,5,61,0,0,160,164,7,2,0,0,161,162,5,
        33,0,0,162,164,5,61,0,0,163,154,1,0,0,0,163,156,1,0,0,0,163,158,
        1,0,0,0,163,160,1,0,0,0,163,161,1,0,0,0,164,18,1,0,0,0,165,166,5,
        67,0,0,166,167,5,84,0,0,167,176,5,78,0,0,168,169,5,76,0,0,169,170,
        5,67,0,0,170,171,5,84,0,0,171,176,5,78,0,0,172,173,5,83,0,0,173,
        174,5,84,0,0,174,176,5,87,0,0,175,165,1,0,0,0,175,168,1,0,0,0,175,
        172,1,0,0,0,176,20,1,0,0,0,177,178,5,65,0,0,178,179,5,78,0,0,179,
        190,5,89,0,0,180,181,5,78,0,0,181,182,5,79,0,0,182,183,5,78,0,0,
        183,190,5,69,0,0,184,185,5,65,0,0,185,186,5,76,0,0,186,190,5,76,
        0,0,187,188,5,73,0,0,188,190,5,78,0,0,189,177,1,0,0,0,189,180,1,
        0,0,0,189,184,1,0,0,0,189,187,1,0,0,0,190,22,1,0,0,0,191,192,5,65,
        0,0,192,193,5,78,0,0,193,194,5,89,0,0,194,195,5,95,0,0,195,196,5,
        77,0,0,196,197,5,65,0,0,197,198,5,80,0,0,198,24,1,0,0,0,199,200,
        5,69,0,0,200,201,5,77,0,0,201,202,5,80,0,0,202,203,5,84,0,0,203,
        204,5,89,0,0,204,26,1,0,0,0,205,206,5,80,0,0,206,207,5,82,0,0,207,
        212,5,69,0,0,208,209,5,80,0,0,209,210,5,83,0,0,210,212,5,84,0,0,
        211,205,1,0,0,0,211,208,1,0,0,0,212,28,1,0,0,0,213,214,5,67,0,0,
        214,215,5,65,0,0,215,216,5,83,0,0,216,217,5,69,0,0,217,218,5,95,
        0,0,218,219,5,67,0,0,219,220,5,79,0,0,220,221,5,85,0,0,221,222,5,
        78,0,0,222,223,5,84,0,0,223,30,1,0,0,0,224,225,5,73,0,0,225,226,
        5,70,0,0,226,32,1,0,0,0,227,228,5,80,0,0,228,229,5,69,0,0,229,230,
        5,82,0,0,230,231,5,83,0,0,231,232,5,79,0,0,232,233,5,78,0,0,233,
        234,5,95,0,0,234,235,5,67,0,0,235,236,5,79,0,0,236,237,5,85,0,0,
        237,238,5,78,0,0,238,239,5,84,0,0,239,34,1,0,0,0,240,241,5,80,0,
        0,241,242,5,69,0,0,242,243,5,82,0,0,243,244,5,67,0,0,244,245,5,69,
        0,0,245,246,5,78,0,0,246,247,5,84,0,0,247,248,5,73,0,0,248,249,5,
        76,0,0,249,250,5,69,0,0,250,251,5,95,0,0,251,252,5,82,0,0,252,253,
        5,65,0,0,253,254,5,78,0,0,254,255,5,75,0,0,255,256,5,95,0,0,256,
        257,5,73,0,0,257,258,5,78,0,0,258,259,5,95,0,0,259,260,5,67,0,0,
        260,261,5,65,0,0,261,262,5,84,0,0,262,263,5,69,0,0,263,264,5,71,
        0,0,264,265,5,79,0,0,265,266,5,82,0,0,266,267,5,89,0,0,267,36,1,
        0,0,0,268,269,5,80,0,0,269,270,5,69,0,0,270,271,5,82,0,0,271,272,
        5,67,0,0,272,273,5,69,0,0,273,274,5,78,0,0,274,275,5,84,0,0,275,
        276,5,73,0,0,276,277,5,76,0,0,277,278,5,69,0,0,278,279,5,95,0,0,
        279,280,5,82,0,0,280,281,5,65,0,0,281,282,5,78,0,0,282,283,5,75,
        0,0,283,38,1,0,0,0,284,285,5,81,0,0,285,286,5,85,0,0,286,287,5,65,
        0,0,287,288,5,78,0,0,288,289,5,84,0,0,289,290,5,73,0,0,290,291,5,
        76,0,0,291,292,5,69,0,0,292,40,1,0,0,0,293,294,5,81,0,0,294,295,
        5,85,0,0,295,296,5,65,0,0,296,297,5,78,0,0,297,298,5,84,0,0,298,
        299,5,73,0,0,299,300,5,76,0,0,300,301,5,69,0,0,301,302,5,95,0,0,
        302,303,5,73,0,0,303,304,5,78,0,0,304,305,5,95,0,0,305,306,5,67,
        0,0,306,307,5,65,0,0,307,308,5,84,0,0,308,309,5,69,0,0,309,310,5,
        71,0,0,310,311,5,79,0,0,311,312,5,82,0,0,312,313,5,89,0,0,313,42,
        1,0,0,0,314,315,5,82,0,0,315,316,5,65,0,0,316,317,5,78,0,0,317,318,
        5,75,0,0,318,319,5,95,0,0,319,320,5,65,0,0,320,321,5,83,0,0,321,
        322,5,67,0,0,322,323,5,69,0,0,323,324,5,78,0,0,324,325,5,68,0,0,
        325,326,5,73,0,0,326,327,5,78,0,0,327,328,5,71,0,0,328,44,1,0,0,
        0,329,330,5,82,0,0,330,331,5,65,0,0,331,332,5,78,0,0,332,333,5,75,
        0,0,333,334,5,95,0,0,334,335,5,68,0,0,335,336,5,69,0,0,336,337,5,
        83,0,0,337,338,5,67,0,0,338,339,5,69,0,0,339,340,5,78,0,0,340,341,
        5,68,0,0,341,342,5,73,0,0,342,343,5,78,0,0,343,344,5,71,0,0,344,
        46,1,0,0,0,345,346,5,83,0,0,346,347,5,85,0,0,347,348,5,77,0,0,348,
        48,1,0,0,0,349,350,5,68,0,0,350,351,5,73,0,0,351,352,5,70,0,0,352,
        353,5,70,0,0,353,354,5,69,0,0,354,355,5,82,0,0,355,356,5,69,0,0,
        356,357,5,78,0,0,357,358,5,67,0,0,358,359,5,69,0,0,359,50,1,0,0,
        0,360,361,5,67,0,0,361,362,5,79,0,0,362,363,5,65,0,0,363,364,5,76,
        0,0,364,365,5,69,0,0,365,366,5,83,0,0,366,367,5,67,0,0,367,368,5,
        69,0,0,368,52,1,0,0,0,369,370,5,82,0,0,370,371,5,65,0,0,371,372,
        5,84,0,0,372,373,5,73,0,0,373,374,5,79,0,0,374,54,1,0,0,0,375,376,
        5,89,0,0,376,377,5,69,0,0,377,378,5,65,0,0,378,379,5,82,0,0,379,
        380,5,83,0,0,380,381,5,95,0,0,381,382,5,83,0,0,382,383,5,73,0,0,
        383,384,5,78,0,0,384,385,5,67,0,0,385,386,5,69,0,0,386,56,1,0,0,
        0,387,388,5,66,0,0,388,389,5,79,0,0,389,390,5,79,0,0,390,391,5,76,
        0,0,391,392,5,69,0,0,392,393,5,65,0,0,393,394,5,78,0,0,394,58,1,
        0,0,0,395,396,5,65,0,0,396,397,5,78,0,0,397,398,5,68,0,0,398,60,
        1,0,0,0,399,400,5,79,0,0,400,401,5,82,0,0,401,62,1,0,0,0,402,403,
        5,78,0,0,403,404,5,79,0,0,404,405,5,84,0,0,405,64,1,0,0,0,406,407,
        5,91,0,0,407,66,1,0,0,0,408,409,5,93,0,0,409,68,1,0,0,0,410,411,
        5,78,0,0,411,412,5,85,0,0,412,413,5,76,0,0,413,414,5,76,0,0,414,
        70,1,0,0,0,415,416,5,58,0,0,416,417,5,78,0,0,417,431,5,67,0,0,418,
        419,5,58,0,0,419,420,5,78,0,0,420,431,5,73,0,0,421,422,5,58,0,0,
        422,423,5,78,0,0,423,431,5,65,0,0,424,425,5,58,0,0,425,426,5,78,
        0,0,426,431,5,77,0,0,427,428,5,58,0,0,428,429,5,78,0,0,429,431,5,
        68,0,0,430,415,1,0,0,0,430,418,1,0,0,0,430,421,1,0,0,0,430,424,1,
        0,0,0,430,427,1,0,0,0,431,432,1,0,0,0,432,430,1,0,0,0,432,433,1,
        0,0,0,433,72,1,0,0,0,434,445,3,89,44,0,435,444,3,91,45,0,436,444,
        3,79,39,0,437,444,3,77,38,0,438,444,5,32,0,0,439,444,3,85,42,0,440,
        444,2,42,43,0,441,444,3,87,43,0,442,444,7,3,0,0,443,435,1,0,0,0,
        443,436,1,0,0,0,443,437,1,0,0,0,443,438,1,0,0,0,443,439,1,0,0,0,
        443,440,1,0,0,0,443,441,1,0,0,0,443,442,1,0,0,0,444,447,1,0,0,0,
        445,443,1,0,0,0,445,446,1,0,0,0,446,448,1,0,0,0,447,445,1,0,0,0,
        448,449,3,89,44,0,449,74,1,0,0,0,450,452,7,4,0,0,451,450,1,0,0,0,
        452,453,1,0,0,0,453,451,1,0,0,0,453,454,1,0,0,0,454,455,1,0,0,0,
        455,456,6,37,0,0,456,76,1,0,0,0,457,458,2,48,57,0,458,78,1,0,0,0,
        459,460,7,5,0,0,460,80,1,0,0,0,461,462,7,6,0,0,462,82,1,0,0,0,463,
        464,3,81,40,0,464,465,3,81,40,0,465,466,3,81,40,0,466,467,3,81,40,
        0,467,468,3,81,40,0,468,469,3,81,40,0,469,470,3,81,40,0,470,471,
        3,81,40,0,471,472,3,85,42,0,472,473,3,81,40,0,473,474,3,81,40,0,
        474,475,3,81,40,0,475,476,3,81,40,0,476,477,3,85,42,0,477,478,3,
        81,40,0,478,479,3,81,40,0,479,480,3,81,40,0,480,481,3,81,40,0,481,
        482,3,85,42,0,482,483,3,81,40,0,483,484,3,81,40,0,484,485,3,81,40,
        0,485,486,3,81,40,0,486,487,3,85,42,0,487,488,3,81,40,0,488,489,
        3,81,40,0,489,490,3,81,40,0,490,491,3,81,40,0,491,492,3,81,40,0,
        492,493,3,81,40,0,493,494,3,81,40,0,494,495,3,81,40,0,495,496,3,
        81,40,0,496,497,3,81,40,0,497,498,3,81,40,0,498,499,3,81,40,0,499,
        84,1,0,0,0,500,501,5,45,0,0,501,86,1,0,0,0,502,503,5,46,0,0,503,
        88,1,0,0,0,504,505,5,39,0,0,505,90,1,0,0,0,506,507,5,92,0,0,507,
        508,5,39,0,0,508,92,1,0,0,0,15,0,111,119,132,135,152,163,175,189,
        211,430,432,443,445,453,1,6,0,0
    ]

class Esgish2GrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    SAVED_SCREEN = 4
    FACTOR = 5
    CUSTOM_SCORE = 6
    OP_NULL_TYPE = 7
    OP_BOOLEAN = 8
    OP_ORDER = 9
    OP_STRING_MATCH = 10
    OP_STRING_LIST = 11
    OP_STRING_MAP = 12
    OP_STRING_LIST_NO_ARG = 13
    OP_DATE = 14
    CASE_COUNT = 15
    IF = 16
    PERSON_COUNT = 17
    PERCENTILE_RANK_IN_CATEGORY = 18
    PERCENTILE_RANK = 19
    QUANTILE = 20
    QUANTILE_IN_CATEGORY = 21
    RANK_ASCENDING = 22
    RANK_DESCENDING = 23
    SUM = 24
    DIFFERENCE = 25
    COALESCE = 26
    RATIO = 27
    YEARS_SINCE = 28
    BOOLEAN = 29
    AND = 30
    OR = 31
    NOT = 32
    BO = 33
    BC = 34
    NULL = 35
    NULL_LIST = 36
    ARG = 37
    WS = 38

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "','", "'IS'", "'EMPTY'", "'CASE_COUNT'", "'IF'", 
            "'PERSON_COUNT'", "'PERCENTILE_RANK_IN_CATEGORY'", "'PERCENTILE_RANK'", 
            "'QUANTILE'", "'QUANTILE_IN_CATEGORY'", "'RANK_ASCENDING'", 
            "'RANK_DESCENDING'", "'SUM'", "'DIFFERENCE'", "'COALESCE'", 
            "'RATIO'", "'YEARS_SINCE'", "'BOOLEAN'", "'AND'", "'OR'", "'NOT'", 
            "'['", "']'", "'NULL'" ]

    symbolicNames = [ "<INVALID>",
            "SAVED_SCREEN", "FACTOR", "CUSTOM_SCORE", "OP_NULL_TYPE", "OP_BOOLEAN", 
            "OP_ORDER", "OP_STRING_MATCH", "OP_STRING_LIST", "OP_STRING_MAP", 
            "OP_STRING_LIST_NO_ARG", "OP_DATE", "CASE_COUNT", "IF", "PERSON_COUNT", 
            "PERCENTILE_RANK_IN_CATEGORY", "PERCENTILE_RANK", "QUANTILE", 
            "QUANTILE_IN_CATEGORY", "RANK_ASCENDING", "RANK_DESCENDING", 
            "SUM", "DIFFERENCE", "COALESCE", "RATIO", "YEARS_SINCE", "BOOLEAN", 
            "AND", "OR", "NOT", "BO", "BC", "NULL", "NULL_LIST", "ARG", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "SAVED_SCREEN", "FACTOR", "CUSTOM_SCORE", 
                  "OP_NULL_TYPE", "OP_BOOLEAN", "OP_ORDER", "OP_STRING_MATCH", 
                  "OP_STRING_LIST", "OP_STRING_MAP", "OP_STRING_LIST_NO_ARG", 
                  "OP_DATE", "CASE_COUNT", "IF", "PERSON_COUNT", "PERCENTILE_RANK_IN_CATEGORY", 
                  "PERCENTILE_RANK", "QUANTILE", "QUANTILE_IN_CATEGORY", 
                  "RANK_ASCENDING", "RANK_DESCENDING", "SUM", "DIFFERENCE", 
                  "COALESCE", "RATIO", "YEARS_SINCE", "BOOLEAN", "AND", 
                  "OR", "NOT", "BO", "BC", "NULL", "NULL_LIST", "ARG", "WS", 
                  "DIGIT", "LETTER", "HEX", "UUID128", "DASH", "DOT", "QT", 
                  "ESC_SINGLE_QUOTE" ]

    grammarFileName = "Esgish2Grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


